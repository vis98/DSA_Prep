class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> result=new ArrayList<List<Integer>>();
        List<Integer> current=new ArrayList<Integer>();
         backtrack(result,current,nums);
             return result;
    }
    
    public void backtrack(List<List<Integer>> result,List<Integer> current,int[] nums){

           if(current.size() == nums.length) {
        result.add(new ArrayList<>(current));
        return;
    }
        
          for(int i = 0; i < nums.length; i++) {

        // if the current number is already in the set, skip it
        if (current.contains(nums[i])) {
            continue;
        }
        current.add(nums[i]);
        backtrack(result,current,nums);

        current.remove(current.size() - 1);
     System.out.println("before removing current size"+current+"at index"+i);

    }
    }
}
