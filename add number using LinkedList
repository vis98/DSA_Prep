/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int sum=0,carry=0;
       ListNode head=l1;
       ListNode head2=l2;
       ListNode result=new ListNode(0);
        ListNode res=result;
        int rem=0;
        while(head!=null && head2!=null){
             sum= head.val+head2.val+carry;
              rem=sum%10;
            carry=sum/10;
            ListNode temp=new ListNode(rem);
            res.next=temp;
            res=res.next;
                        head=head.next;
            head2=head2.next;

            
        }
        while(head!=null){
            sum=head.val+carry;
            rem=sum%10;
            carry=sum/10;
             ListNode temp=new ListNode(rem);
            res.next=temp;
            res=res.next;
            head=head.next;
        }
        while(head2!=null){
            sum=head2.val+carry;
              rem=sum%10;
            carry=sum/10;
             ListNode temp=new ListNode(rem);
            res.next=temp;
            res=res.next;
                        head2=head2.next;

        }
        if(carry>0)
        {
             ListNode temp=new ListNode(carry);
            res.next=temp;
            res=res.next;
        }
        return result.next;
    }
}
