class Solution {
    public int numIslands(char[][] grid) {
       int res=calculateNoOfIsland(grid); 
       return res;
    }
    public int calculateNoOfIsland(char grid[][]){
        int co=0;
        int r=grid.length;
        if(r==0){
            return 0;
        }
        int c=grid[0].length;
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                if(grid[i][j]=='1'){
                    dfs(i,j,grid,r,c);
                    co++;
                }
                
            }
        }
        return co++;
    }
    public void dfs(int x,int y,char grid[][],int r,int c){
        if(x>=r || x<0 || y>=c || y<0 || grid[x][y]!='1'){
            return ;
        }
        grid[x][y]='2';
        dfs(x-1,y,grid,r,c);
        dfs(x+1,y,grid,r,c);
        dfs(x,y-1,grid,r,c);
        dfs(x,y+1,grid,r,c);


    }
}
