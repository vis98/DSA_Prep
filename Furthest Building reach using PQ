import java.util.*;
import java.lang.*;
class Solution {
    public int furthestBuilding(int[] heights, int bricks, int ladders) {
        int index=0,f=0;
         PriorityQueue<Integer> pq
            = new PriorityQueue<Integer>(
                Collections.reverseOrder());
        for(int i=0;i<heights.length-1;i++){
            int diff=heights[i]-heights[i+1];
            if(diff<0){
                pq.offer(Math.abs(diff));
                bricks=bricks-(Math.abs(diff));

                if(bricks<0){
                    
                    int diffpop=pq.poll();
                    bricks=bricks+diffpop;
                    ladders--;
                }
                if(ladders<0){
                    return i;
                }
               

            }
            
            
                
            
        }
        return heights.length-1;
    }
}
