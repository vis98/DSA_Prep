class Solution {
    public int maxSubarraySumCircular(int[] nums) {
        int max_so_far = -2147483647;
        
        int max_end_here=0;
        int min_end_here=0;
        int min_so_far = 2147483647;

        int tsum=0;
        for(int i=0;i<nums.length;i++){
            tsum=tsum+nums[i];
            max_end_here=max_end_here+nums[i];
            min_end_here=min_end_here+nums[i];
            max_so_far=Math.max(max_end_here,max_so_far);
            min_so_far=Math.min(min_end_here,min_so_far);

            if(max_end_here<0){
                max_end_here=0;
            }
            if(min_end_here>0){
                min_end_here=0;
            }

                
        }
       

        int csum=tsum-(min_so_far);
        return max_so_far>0? Math.max(csum,max_so_far):max_so_far;
    
    
    }
}
