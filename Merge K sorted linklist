/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
      if(lists.length==0){
          return null;
      }
      ListNode result=null;
      for(ListNode currentlist:lists){
          result=mergeList(currentlist,result);
      }  
      return result;
    }

    public ListNode mergeList(ListNode currentlist,ListNode result){

        if(result==null){
            result=currentlist;
            return result;
        }
        ListNode dummy=new ListNode(0);
        ListNode temp_result=dummy;
        while(result!=null && currentlist!=null){
            if(result.val<=currentlist.val){
                dummy.next=result;
                result=result.next;
                dummy=dummy.next;
            }
            else{
                dummy.next=currentlist;
                dummy=dummy.next;
                currentlist=currentlist.next;
            }
        }
        while(currentlist!=null){
           dummy.next=currentlist;
                dummy=dummy.next;
                currentlist=currentlist.next; 
        }
         while(result!=null){
           dummy.next=result;
                dummy=dummy.next;
                result=result.next; 
        }
        return temp_result.next;
    }
}
