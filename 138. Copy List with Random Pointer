/*
// Definition for a Node.
class Node {
    int val;
    Node next;
    Node random;

    public Node(int val) {
        this.val = val;
        this.next = null;
        this.random = null;
    }
}
*/
import java.util.*;

class Solution {
    public Node copyRandomList(Node head) {
         Map<Node, Node> originalToNewNodeMap;
                originalToNewNodeMap = new HashMap<>();

         Node curr=head;
       Node finalnode=new Node(0);
        Node res=finalnode;
        while(curr!=null){
            finalnode.next=new Node(curr.val);
             finalnode=finalnode.next;
            originalToNewNodeMap.put(curr,finalnode);
           
            curr=curr.next;
        }
              Node currOriginalNode = head;
           Node currNewNode = res.next;
        while (currOriginalNode != null) {
            currNewNode.random = originalToNewNodeMap.get(currOriginalNode.random);
            currOriginalNode = currOriginalNode.next;
            currNewNode = currNewNode.next;
        }
        return res.next;
        
        
    }
}
